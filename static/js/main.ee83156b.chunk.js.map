{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyUpHandler","event","setState","key","window","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,MAFhB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,OAAOC,iBAAiB,QAASC,KAAKN,gBAN1C,kCASE,WACEI,OAAOG,oBAAoB,QAASD,KAAKN,gBAV7C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEKF,KAAKR,MAAMC,WAAZ,mCAEgCA,EAFhC,KACI,kCAzBhB,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee83156b.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends React.Component {\n  state: Readonly<State> = {\n    pressedKey: null,\n  };\n\n  componentDidMount(): void {\n    window.addEventListener('keyup', this.keyUpHandler);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('keyup', this.keyUpHandler);\n  }\n\n  keyUpHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            !this.state.pressedKey\n              ? 'Nothing was pressed yet'\n              : `The last pressed key is [${pressedKey}]`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}